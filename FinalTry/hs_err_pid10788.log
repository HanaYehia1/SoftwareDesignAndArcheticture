#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:78), pid=10788, tid=12984
#
# JRE version: OpenJDK Runtime Environment Temurin-17.0.2+8 (17.0.2+8) (build 17.0.2+8)
# Java VM: OpenJDK 64-Bit Server VM Temurin-17.0.2+8 (17.0.2+8, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=Cp1256 -XX:+ShowCodeDetailsInExceptionMessages trial.trial

Host: AMD A8-4500M APU with Radeon(tm) HD Graphics   , 4 cores, 6G,  Windows 10 , 64 bit Build 19041 (10.0.19041.2364)
Time: Thu Dec 29 23:07:20 2022 Egypt Standard Time elapsed time: 0.521847 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x00000154bbc3b9c0):  JavaThread "C1 CompilerThread0" daemon [_thread_in_native, id=12984, stack(0x0000000dcc600000,0x0000000dcc700000)]


Current CompileTask:
C1:    522   16       3       java.lang.module.ModuleDescriptor$Exports::hashCode (38 bytes)

Stack: [0x0000000dcc600000,0x0000000dcc700000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x67564a]